/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.39
 * Generated at: 2019-04-14 08:47:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("jar:file:/C:/project/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/project_3W/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1555229762238L));
    _jspx_dependants.put("jar:file:/C:/project/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/project_3W/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/C:/project/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/project_3W/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<script src=\"resources/jquery/jquery-3.3.1.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("$(document).ready(function(){\r\n");
      out.write("\t$('#loginBts').on('click',logCheck);\r\n");
      out.write("\t$('#joinBts').on('click',joinCheck);\r\n");
      out.write("});\r\n");
      out.write("//로그인 시 회원체크\r\n");
      out.write("function logCheck(){\r\n");
      out.write("\tvar email = $('#email').val();\r\n");
      out.write("\tvar pw = $('#password').val();\r\n");
      out.write("\t\r\n");
      out.write("\tif(email.length < 3 || email.length > 25){\t//var id의 길이 값을 확인\r\n");
      out.write("\t\talert('Email 입력하시오.');\t\t\t\t//alert 창 띄우기\r\n");
      out.write("\t\treturn;\t\t\t\t\t\t\t\t\t//함수 종료\r\n");
      out.write("\t}\r\n");
      out.write("\tif(pw.length < 3 ){\t\t\t\t\t\t\t//var pw의 길이 값을 확인\r\n");
      out.write("\t\talert('비밀번호는 3글자 이상입니다.');\t\t\t//alert 창 띄우기\r\n");
      out.write("\t\treturn;\t\t\t\t\t\t\t\t\t//함수 종료\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t//로그인시 - 회원인지 아닌지 확인하기\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\turl:'loginCheck',\r\n");
      out.write("\t\ttype: 'get',\r\n");
      out.write("\t\tdata: {email: email, password: pw},\r\n");
      out.write("\t\tdataType: 'text',\r\n");
      out.write("\t\tsuccess: function(check){\r\n");
      out.write("\t\t\tif(check == 'true'){\r\n");
      out.write("\t\t\t\t//아이디랑 비밀번호 일치하는 경우 home화면으로 이동\r\n");
      out.write("\t\t\t\twindow.location.replace('home');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\telse{\r\n");
      out.write("\t\t\t\talert(check);\r\n");
      out.write("\t\t\t\talert('등록된 이메일 주소와 비밀번호가 일치하지 않습니다.');\r\n");
      out.write("\t\t\t\t$('#email').val('');\r\n");
      out.write("\t\t\t\t$('#password').val('');\r\n");
      out.write("\t\t\t\t$('#email').focus();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\terror: function(e){\r\n");
      out.write("\t\t\talert(JSON.stringify(e));\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\t\t\t\r\n");
      out.write("}\r\n");
      out.write("//회원가입 버튼 눌렀을 때, 회원정보 확인\r\n");
      out.write("function joinCheck(){\r\n");
      out.write("\tvar email = $('#email').val();\r\n");
      out.write("\tvar pw = $('#password').val();\r\n");
      out.write("\t\r\n");
      out.write("\tif(email.length < 3 || email.length > 25){\t//var id의 길이 값을 확인\r\n");
      out.write("\t\talert('Email 입력하시오.');\t\t\t\t//alert 창 띄우기\r\n");
      out.write("\t\treturn;\t\t\t\t\t\t\t\t\t//함수 종료\r\n");
      out.write("\t}\r\n");
      out.write("\tif(pw.length < 3 ){\t\t\t\t\t\t\t//var pw의 길이 값을 확인\r\n");
      out.write("\t\talert('비밀번호는 3글자 이상입니다.');\t\t\t//alert 창 띄우기\r\n");
      out.write("\t\treturn;\t\t\t\t\t\t\t\t\t//함수 종료\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t//회원가입시 - 회원인지 아닌지 확인하기\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\turl:'joinCheck',\r\n");
      out.write("\t\ttype: 'get',\r\n");
      out.write("\t\tdata: {email: email, password: pw},\r\n");
      out.write("\t\tdataType: 'text',\r\n");
      out.write("\t\tsuccess: function(emailCheck){\r\n");
      out.write("\t\t\t//email이 중복되지 않아회원가입 가능\r\n");
      out.write("\t\t\tif(emailCheck == 'no'){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t//회원가입 성공 후  '본인인증' 창 띄우기\r\n");
      out.write("\t\t\t\talert('해당 이메일로 메일을 전송하였습니다. 본인 인증해주세요');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t//입력한 email이 이미 존재함\r\n");
      out.write("\t\t\telse{\r\n");
      out.write("\t\t\t\talert('이미 등록된 이메일 입니다.');\r\n");
      out.write("\t\t\t\t$('#email').val('');\r\n");
      out.write("\t\t\t\t$('#password').val('');\r\n");
      out.write("\t\t\t\t$('#email').focus();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\terror: function(e){\r\n");
      out.write("\t\t\talert(JSON.stringify(e));\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\t\t\t\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("//아이디 기억하기\r\n");
      out.write("$(document).ready(function(){\r\n");
      out.write(" \r\n");
      out.write("    // 저장된 쿠키값을 가져와서 ID 칸에 넣어준다. 없으면 공백으로 들어감.\r\n");
      out.write("    var key = getCookie(\"key\");\r\n");
      out.write("    $('#email').val(key); \r\n");
      out.write("     \r\n");
      out.write("    if($('#email').val() != \"\"){ // 그 전에 ID를 저장해서 처음 페이지 로딩 시, 입력 칸에 저장된 ID가 표시된 상태라면,\r\n");
      out.write("        $('#customControlInline').attr('checked', true); // ID 저장하기를 체크 상태로 두기.\r\n");
      out.write("    }\r\n");
      out.write("     \r\n");
      out.write("    $('#customControlInline').change(function(){ // 체크박스에 변화가 있다면,\r\n");
      out.write("        if($('#customControlInline').is(':checked')){ // ID 저장하기 체크했을 때,\r\n");
      out.write("            setCookie('key', $('#email').val(), 7); // 7일 동안 쿠키 보관\r\n");
      out.write("        }else{ // ID 저장하기 체크 해제 시,\r\n");
      out.write("            deleteCookie('key');\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("     \r\n");
      out.write("    // ID 저장하기를 체크한 상태에서 ID를 입력하는 경우, 이럴 때도 쿠키 저장.\r\n");
      out.write("    $('#email').keyup(function(){ \t\t\t\t// ID 입력 칸에 ID를 입력할 때,\r\n");
      out.write("        if($('#customControlInline').is(':checked')){ // ID 저장하기를 체크한 상태라면,\r\n");
      out.write("            setCookie('key', $('#email').val(), 7); // 7일 동안 쿠키 보관\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("});\r\n");
      out.write(" \r\n");
      out.write("function setCookie(cookieName, value, exdays){\r\n");
      out.write("    var exdate = new Date();\r\n");
      out.write("    exdate.setDate(exdate.getDate() + exdays);\r\n");
      out.write("    var cookieValue = escape(value) + ((exdays==null) ? \"\" : \"; expires=\" + exdate.toGMTString());\r\n");
      out.write("    document.cookie = cookieName + \"=\" + cookieValue;\r\n");
      out.write("}\r\n");
      out.write(" \r\n");
      out.write("function deleteCookie(cookieName){\r\n");
      out.write("    var expireDate = new Date();\r\n");
      out.write("    expireDate.setDate(expireDate.getDate() - 1);\r\n");
      out.write("    document.cookie = cookieName + \"= \" + \"; expires=\" + expireDate.toGMTString();\r\n");
      out.write("}\r\n");
      out.write(" \r\n");
      out.write("function getCookie(cookieName) {\r\n");
      out.write("    cookieName = cookieName + '=';\r\n");
      out.write("    var cookieData = document.cookie;\r\n");
      out.write("    var start = cookieData.indexOf(cookieName);\r\n");
      out.write("    var cookieValue = '';\r\n");
      out.write("    if(start != -1){\r\n");
      out.write("        start += cookieName.length;\r\n");
      out.write("        var end = cookieData.indexOf(';', start);\r\n");
      out.write("        if(end == -1)end = cookieData.length;\r\n");
      out.write("        cookieValue = cookieData.substring(start, end);\r\n");
      out.write("    }\r\n");
      out.write("    return unescape(cookieValue);\r\n");
      out.write("}\r\n");
      out.write("</script> \r\n");
      out.write("      \r\n");
      out.write("<head>\r\n");
      out.write("\t<title>Login Page</title>\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\" integrity=\"sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO\" crossorigin=\"anonymous\">\r\n");
      out.write("\t<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.6.1/css/all.css\" integrity=\"sha384-gfdkjb5BdAXd+lj+gudLWI+BXq4IuLW5IT+brZEZsLFm++aCMlF1V92rMkPaX4PP\" crossorigin=\"anonymous\">\r\n");
      out.write("\t<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\r\n");
      out.write("\t<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("\t<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\r\n");
      out.write("\t<link href=\"resources/css/Login.css\" rel=\"stylesheet\">\r\n");
      out.write("\t<link href=\"resources/css/character.css\" rel=\"stylesheet\">\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"container h-100\">\r\n");
      out.write("\t\t<div class=\"d-flex justify-content-center h-100\">\r\n");
      out.write("\t\t\t<div class=\"user_card\">\r\n");
      out.write("\t\t\t\t<div class=\"d-flex justify-content-center\">\r\n");
      out.write("\t\t\t\t\t<div class=\"brand_logo_container\">\r\n");
      out.write("\t\t\t\t\t<!-- 캐릭터 컨트롤 소스 -->\r\n");
      out.write("\t\t\t\t\t\t<!-- <img src=\"resources/img/head.png\" class=\"brand_logo\" alt=\"Logo\"> -->\r\n");
      out.write("\t\t\t\t\t\t<!-- 캐릭터 배경 -->\r\n");
      out.write("\t\t\t\t\t\t <svg id=\"cha\" viewBox=\"0 0 250 250\" xmlns=\"http://www.w3.org/2000/svg\">\r\n");
      out.write("            <!-- 얼굴 cx,cy=얼굴 위치  r= 얼굴 크기-->\r\n");
      out.write("            <circle cx=\"125\" cy=\"125\" r=\"120\" fill=\"#f8ea8a\" stroke=\"#f8ea8a\" stroke-width=\"2.5\" />\r\n");
      out.write("            <g class=\"eyes\">\r\n");
      out.write("                <!-- left eye and eyebrow-->\r\n");
      out.write("                <circle cx=\"94\" cy=\"110\" r=\"9\" fill=\"#000\" />\r\n");
      out.write("                <!-- right eye and eyebrow -->\r\n");
      out.write("                <circle cx=\"146\" cy=\"110\" r=\"9\" fill=\"#000\" />\r\n");
      out.write("            </g>\r\n");
      out.write("            <!-- 입코 -->\r\n");
      out.write("            <g class=\"muzzle\">\r\n");
      out.write("               <!--  <path d=\"M60,66 C58.5,61 49,63 49,69 C49,75 58,77 60,71 M60,66 C61.5,61 71,63 71,69 C71,75 62,77 60,71\" fill=\"#fff\" />\r\n");
      out.write("                <path d=\"M60,66 C58.5,61 49,63 49,69 C49,75 58,77 60,71 M60,66 C61.5,61 71,63 71,69 C71,75 62,77 60,71\" fill=\"#fff\" stroke=\"#000\" stroke-width=\"2.5\" stroke-linejoin=\"round\" stroke-linecap=\"round\" /> -->\r\n");
      out.write("                <polygon points=\"119,123.5,120,123.4,121,123.5,120,125\" fill=\"#a22525\" stroke=\"#a22525\" stroke-width=\"15\"  />\r\n");
      out.write("            </g>\r\n");
      out.write("        </svg>\r\n");
      out.write("        <!-- 캐릭터 컨트롤 svg끝 -->\r\n");
      out.write("       \r\n");
      out.write("        \r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"d-flex justify-content-center form_container\">\r\n");
      out.write("\t\t\t\t\t<form>\r\n");
      out.write("\t\t\t\t\t<!-- 로그인 폼 -->\r\n");
      out.write("\t\t\t\t\t\t<div class=\"input-group mb-3\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"input-group-append\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<span class=\"input-group-text\"><i class=\"fas fa-user\"></i></span>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"text\" name=\"email\" id=\"email\" class=\"form-control input_user\" value=\"\" placeholder=\"email@domain.com\">\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"input-group mb-2\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"input-group-append\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<span class=\"input-group-text\"><i class=\"fas fa-key\"></i></span>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"password\" name=\"password\" id=\"password\" class=\"form-control input_pass\" value=\"\" placeholder=\"password\">\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"custom-control custom-checkbox\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"checkbox\" class=\"custom-control-input\" id=\"customControlInline\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<label class=\"custom-control-label\" for=\"customControlInline\">Remember me</label>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"d-flex justify-content-center mt-3 login_container\">\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" name=\"button\" id=\"loginBts\" class=\"btn login_btn\">Login</button>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"d-flex justify-content-center mt-3 login_container\">\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" name=\"button\" id=\"joinBts\" class=\"btn login_btn\">Sign Up</button>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"mt-4\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t <script src=\"resources/js/login_script.js\"></script>\r\n");
      out.write("\t \r\n");
      out.write("\t\r\n");
      out.write("</body>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
