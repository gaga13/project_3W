<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 하루 일정  SQL -->
<mapper namespace="global.sesoc.www.dao.ScheduleMapper">
<!-- 일정 등록 -->
<insert id="inSchedule" parameterType="ScheduleVO">
	insert into schedule(
		email
		, snum
		, scontent
		, slocation
		, startdate
		, enddate
		, slatitude
		, slongitude
		, subpath
		,subroute
	) 
	values(
 		 #{email}
 		, snum_seq.nextval
 		, #{scontent}
 		, #{slocation}
 		, to_date(#{startdate},'yyyy-mm-dd PM hh:MI')
 		, to_date(#{enddate},'yyyy-mm-dd PM hh:MI')
 		, #{slatitude}
 		, #{slongitude}
 		,#{subpath}
 		,#{subroute}
	)
</insert>

<!-- 하루 일정 -->
<select id="getScheduleList" parameterType="hashmap" resultType="ScheduleVO">
select 
		 snum
		 , to_char(startdate, 'PM hh12:mi') as startdate
		 , to_char(enddate, 'PM hh12:mi') as enddate
		 , scontent
		 , slocation
		 , slatitude
		 , slongitude
		 ,subroute
		 , subpath
from 	
		 schedule 
where 	
		 email like #{email} and to_date(#{startdate}, 'yyyy/mm/dd') 
	between 
		startdate-1 
	and 
	   enddate
order by 
		 startdate asc
</select>

<!-- 하루 일정 리스트중 클릭했을 때 -->
<select id="getScheduleListClick" parameterType="hashmap" resultType="ScheduleVO">
select 
		 snum
		 , to_char(startdate, 'yyyy-mm-dd PM hh12:mi') as startdate
		 , to_char(enddate, 'yyyy-mm-dd PM hh12:mi') as enddate
		 , scontent
		 , slocation
		 , slatitude
		 , slongitude
		 ,subroute
		 , subpath
from 	
		 schedule 
where 	
		 email like #{email} and to_char(startdate, 'yyyy/mm/dd') = #{startdate}
order by 
		 startdate asc
</select>

<!-- 한달 일정 -->
<select id="getMonth" parameterType="ScheduleVO" resultType="ScheduleVO" >
select 
		snum
		, email
		, scontent
		, to_char(startdate,'yyyy-mm-dd hh24:MI')startdate
		, to_char(enddate,'yyyy-mm-dd hh24:MI')enddate 
		, scontent
		 , slocation
		 , slatitude
		 , slongitude
		 ,subroute
		 , subpath
from 
		schedule 
where 
		email = #{email} 
	and 
		startdate 
	between 
		to_date(#{startdate}, 'yyyy-mm-dd') 
	and 
		to_date(#{enddate}, 'yyyy-mm-dd')
</select>

<!-- 일정 수정 -->
<update id="setSchedule" parameterType="ScheduleVO">
	update 
		schedule 
	set 
		scontent=#{scontent}
		, startdate=to_date(#{startdate},'yyyy-mm-dd am hh:MI ')
		, enddate=to_date(#{enddate},'yyyy-mm-dd am hh:MI '),
		slocation =#{slocation} 
	where 
		email=#{email} 
	and 
		snum=#{snum}
</update>

<delete id="deSchedule" parameterType="map">
	delete 
		schedule 
	where 
		email like #{email} 
	and 
		snum=#{num}
</delete>

</mapper>